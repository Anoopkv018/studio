
'use client';

import { useState, type FormEvent, useRef } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { PageHeader } from '@/components/common/PageHeader';
import { LoadingSpinner } from '@/components/common/LoadingSpinner';
import { getMarketPrice, type MarketPriceOutput } from '@/ai/flows/market-price-query';
import { useToast } from '@/hooks/use-toast';
import { DollarSign, Volume2 } from 'lucide-react';

export default function PricePage() {
  const [query, setQuery] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [result, setResult] = useState<MarketPriceOutput | null>(null);
  const { toast } = useToast();
  const audioRef = useRef<HTMLAudioElement>(null);

  const handleSubmit = async (event: FormEvent) => {
    event.preventDefault();
    if (!query.trim()) {
      toast({
        title: '‡≤™‡≥ç‡≤∞‡≤∂‡≥ç‡≤®‡≥Ü ‡≤ñ‡≤æ‡≤≤‡≤ø‡≤Ø‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü',
        description: '‡≤¶‡≤Ø‡≤µ‡≤ø‡≤ü‡≥ç‡≤ü‡≥Å ‡≤¨‡≥Ü‡≤≥‡≥Ü ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤∏‡≥ç‡≤•‡≤≥‡≤¶ ‡≤¨‡≤ó‡≥ç‡≤ó‡≥Ü ‡≤™‡≥ç‡≤∞‡≤∂‡≥ç‡≤®‡≥Ü ‡≤ï‡≥á‡≤≥‡≤ø.',
        variant: 'destructive',
      });
      return;
    }

    setIsLoading(true);
    setResult(null);

    try {
      const response = await getMarketPrice({ query });
      setResult(response);
    } catch (e) {
      console.error(e);
      toast({
        title: '‡≤¶‡≥ã‡≤∑',
        description: '‡≤¨‡≥Ü‡≤≤‡≥Ü ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø ‡≤™‡≤°‡≥Ü‡≤Ø‡≤≤‡≥Å ‡≤∏‡≤æ‡≤ß‡≥ç‡≤Ø‡≤µ‡≤æ‡≤ó‡≤≤‡≤ø‡≤≤‡≥ç‡≤≤. ‡≤¶‡≤Ø‡≤µ‡≤ø‡≤ü‡≥ç‡≤ü‡≥Å ‡≤Æ‡≤§‡≥ç‡≤§‡≥Ü ‡≤™‡≥ç‡≤∞‡≤Ø‡≤§‡≥ç‡≤®‡≤ø‡≤∏‡≤ø.',
        variant: 'destructive',
      });
    } finally {
      setIsLoading(false);
    }
  };
  
  const playAudio = () => {
    if (audioRef.current) {
      audioRef.current.play();
    }
  };

  return (
    <div className="container mx-auto px-4 py-8 md:py-12">
      <PageHeader
        title="‡≤¨‡≥Ü‡≤≤‡≥Ü ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø"
        subtitle="‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤¨‡≥Ü‡≤≥‡≥Ü‡≤ó‡≥Ü ‡≤á‡≤Ç‡≤¶‡≤ø‡≤® ‡≤Æ‡≤æ‡≤∞‡≥Å‡≤ï‡≤ü‡≥ç‡≤ü‡≥Ü ‡≤¨‡≥Ü‡≤≤‡≥Ü ‡≤è‡≤®‡≥Å? ‡≤é‡≤Ç‡≤¶‡≥Å ‡≤á‡≤≤‡≥ç‡≤≤‡≤ø ‡≤ï‡≥á‡≤≥‡≤ø ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤§‡≤ï‡≥ç‡≤∑‡≤£‡≤µ‡≥á ‡≤â‡≤§‡≥ç‡≤§‡≤∞, ‡≤π‡≤æ‡≤ó‡≥Ç ‡≤Æ‡≤æ‡≤∞‡≤æ‡≤ü ‡≤∏‡≤≤‡≤π‡≥Ü‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤™‡≤°‡≥Ü‡≤Ø‡≤ø‡≤∞‡≤ø."
      />
      <div className="max-w-2xl mx-auto">
        <Card>
          <CardContent className="p-6">
            <form onSubmit={handleSubmit} className="flex gap-4">
              <Input
                type="text"
                value={query}
                onChange={(e) => setQuery(e.target.value)}
                placeholder="‡≤â‡≤¶‡≤æ: ‡≤ü‡≥ä‡≤Æ‡≥Ü‡≤ü‡≥ã ‡≤¨‡≥Ü‡≤≤‡≥Ü ‡≤á‡≤Ç‡≤¶‡≥Å ‡≤é‡≤∑‡≥ç‡≤ü‡≥Å?"
                className="flex-grow"
                disabled={isLoading}
              />
              <Button type="submit" disabled={isLoading}>
                {isLoading ? '‡≤™‡≤°‡≥Ü‡≤Ø‡≤≤‡≤æ‡≤ó‡≥Å‡≤§‡≥ç‡≤§‡≤ø‡≤¶‡≥Ü...' : '‡≤¨‡≥Ü‡≤≤‡≥Ü ‡≤™‡≤°‡≥Ü‡≤Ø‡≤ø‡≤∞‡≤ø'}
              </Button>
            </form>
          </CardContent>
        </Card>

        {isLoading && <LoadingSpinner />}

        {result && (
          <Card className="mt-6">
            <CardHeader className="flex flex-row items-center justify-between">
              <CardTitle className="flex items-center gap-2">
                <DollarSign className="text-primary" /> ‡≤Æ‡≤æ‡≤∞‡≥Å‡≤ï‡≤ü‡≥ç‡≤ü‡≥Ü ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø
              </CardTitle>
              {result.audioUri && (
                <>
                  <Button variant="outline" size="icon" onClick={playAudio}>
                    <Volume2 className="h-5 w-5" />
                  </Button>
                  <audio ref={audioRef} src={result.audioUri} className="hidden" />
                </>
              )}
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div><span className="font-semibold">üåø ‡≤¨‡≥Ü‡≤≥‡≥Ü:</span> {result.crop}</div>
                <div><span className="font-semibold">üìÖ ‡≤¶‡≤ø‡≤®‡≤æ‡≤Ç‡≤ï:</span> {result.date}</div>
              </div>
              <div>
                <h4 className="font-semibold">üí∞ ‡≤á‡≤Ç‡≤¶‡≥Å ‡≤Ö‡≤Ç‡≤¶‡≤æ‡≤ú‡≥Å ‡≤¨‡≥Ü‡≤≤‡≥Ü:</h4>
                <p className="text-xl font-bold text-primary">{result.estimatedPrice}</p>
              </div>
              <div>
                <h4 className="font-semibold">üí¨ ‡≤Æ‡≤æ‡≤∞‡≤æ‡≤ü ‡≤∏‡≤≤‡≤π‡≥Ü:</h4>
                <p className="text-muted-foreground">{result.salesAdvice}</p>
              </div>
              <div>
                <h4 className="font-semibold">üì¶ ‡≤§‡≤ú‡≥ç‡≤û ‡≤∏‡≤≤‡≤π‡≥Ü:</h4>
                <p className="text-muted-foreground">{result.expertAdvice}</p>
              </div>
            </CardContent>
          </Card>
        )}
      </div>
    </div>
  );
}
